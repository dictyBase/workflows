name: deploy backend dcr application
on:
  workflow_call:
    inputs:
        app:
          type: string
          required: true
          description: backend application to be deployed, should be one of content, annotation, order or stock
        image_tag:
          type: string
          required: true
          description: docker image tag of the application to be deployed
        run_id:
          type: string
          required: true
          description: github workflow runner id
        dagger_version:
          required: true
          type: string
          description: "version of the Dagger binary"
        dagger_checksum:
          required: true
          type: string
          description: "checksum of the Dagger binary"
        dagger_path:
          type: string
          description: path where dagger binary will be kept
          default: /tmp/dag/bin
        pulumi_state_storage:
          type: string
          description: "location of pulumi state"
          default: "gs://dictycr-pulumi-state"
        artifact_name:
          required: true
          type: string
          description: "Name of the artifact to download"
        kubectl_config_file:
          required: true
          type: string
          description: "Name of the kubectl config file"
        stack:
          required: true
          type: string
          description: "Name of the Pulumi stack to use"
    outputs:
      workflow_run_id:
        description: "The ID of the GitHub workflow run"
        value: ${{ jobs.deploy-setup.outputs.workflow_run_id }}

env:
  KUBECONFIG_FOLDER: /tmp/config
  PULUMI_MODULE: github.com/dictybase-docker/dagger-of-dcr/pulumi-ops@main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: manage paths
        run: |
          mkdir -p ${{ inputs.dagger_path }} 
          echo ${{ inputs.dagger_path }} >> $GITHUB_PATH

      - name: try to restore dagger binary cache with dagger version and checksum
        id: restore_dagger_bin_cache
        uses: actions/cache@v4
        with: 
          path: ${{ inputs.dagger_path }}
          key: ${{ runner.os }}-${{ inputs.dagger_version }}-${{ inputs.dagger_checksum }}

      - name: download kubectl from artifact
        uses: actions/download-artifact@v4
        id: cluster_config
        with: 
          name: ${{ inputs.artifact_name }}
          path: ${{ env.KUBECONFIG_FOLDER }}
          run-id: ${{ inputs.run_id }}

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        id: gcp_authentication
        with:
          credentials_json: ${{ secrets.DEPLOY_SA_KEY }}

      - name: verify pulumi
        run: dagger call -m $PULUMI_MODULE with-backend --backend ${{ inputs.pulumi_state_storage }} with-credentials --credentials=${{ steps.gcp_authentication.outputs.credentials_file_path }} with-pulumi login

      - name: deploy backend application
        run: dagger call -m $PULUMI_MODULE with-backend --backend ${{ inputs.pulumi_state_storage }} with-credentials --credentials=${{ steps.gcp_authentication.outputs.credentials_file_path }} with-kube-config --config=${{ format('{0}/{1}', steps.cluster_config.outputs.download-path, inputs.kubectl_config_file) }} with-pulumi deploy-app --app=${{ inputs.app }} --tag=${{ inputs.image_tag }} --stack=${{ inputs.stack }}

